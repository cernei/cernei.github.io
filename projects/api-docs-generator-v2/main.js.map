{"version":3,"sources":["./src/app/data-examples.ts","./src/environments/environment.ts","./src/app/data.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export const DATA =  {\n  testInput: `{ // @SomeName\n  \"status\": \"success\", // general status @required\n  \"message\": \"The operation has been successfully completed.\", // response message\n  \"dateCreated\": \"2008-10-12\",\n  \"data\": { // data object\n    \"items\": [ // items\n      { //5\n        \"id\": 629261, // tender id\n        \"name\": \"International Consultant - GIS and Climate Modelling Specialist\", // fancy name\n        \"nested\": {\n          \"first\": \"first\",\n        },\n        \"nestedArray\": [\n          [ // 12\n            { //13\n              \"test\": 1\n            }\n          ]\n        ],\n        \"empty\": []\n      },\n    ],\n    \"total\": 515876 // counter\n  }\n}\n`\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  public static lineIndex = 0;\n\n  public static comments: Array<string> = [];\n  public static getComments(input: string): Array<string> {\n    const arr = input.split('\\n');\n    const comments: string[] = [];\n    arr.forEach((item, index) => {\n      const found = item.match(/\\/\\/[^\\/]+/);\n      if (found) {\n        comments[index] = found[0].substring(2).trim();\n      }\n    });\n\n    return comments;\n  }\n  public static parseAnnotations(str: string): object {\n    const attr = {} as any;\n    if (str && str.length) {\n      str = str.replace(/@[A-Za-z0-9]+/g, (match) => {\n        match = match.replace('@', '');\n        if (['nullable', 'required'].includes(match)) {\n          attr[match] = true;\n        } else {\n          attr.$ref = match;\n        }\n        return '';\n\n      });\n      if (str.length) {\n        attr.description = str.trim();\n      }\n    }\n\n    return attr;\n  }\n\n  public static walk(input: any): object {\n    const comment = this.comments[this.lineIndex];\n    const annotations = this.parseAnnotations(comment);\n\n    if (Array.isArray(input)) {\n      let item;\n      if (input.length) {\n        this.lineIndex += 1;\n        item = this.walk(input[0]);\n        this.lineIndex += 1;\n      } else {\n        item = this.walk(2);\n      }\n      return {\n        type: 'array',\n        ...annotations,\n        items: item\n      };\n    } else if (input && typeof input === 'object') {\n      const props = {} as any;\n\n      Object.keys(input).forEach((propertyName, index) => {\n        this.lineIndex += 1;\n        const propertyValue = this.walk(input[propertyName]);\n        // const existingSchemaName = this.checkIfSchemaExists(propertyValue);\n        // if (existingSchemaName) {\n        //   props[propertyName] = {\n        //     $ref: '#/components/schemas/' + existingSchemaName\n        //   };\n        // } else {\n        //   props[propertyName] = propertyValue;\n        // }\n        props[propertyName] = propertyValue;\n      });\n      this.lineIndex += 1;\n\n      return {\n        type: 'object',\n        ...annotations,\n        properties: props,\n      };\n    } else if (Number.isInteger(input)) {\n      return {\n        type: 'integer',\n        ...annotations,\n        example: input\n      };\n    } else if (typeof input === 'boolean') {\n      return {\n        type: 'boolean',\n        ...annotations,\n        example: input\n      };\n    } else {\n      return {\n        type: 'string',\n        ...annotations,\n        example: input\n      };\n    }\n  }\n  private static normalize(value: object): object {\n    return value;\n  }\n\n  // private static checkIfSchemaExists(value) {\n  //   const database = {\n  //     '{\"type\":\"object\",\"properties\":{\"first\":{\"type\":\"string\",\"example\":\"first\"}}}': 'FirstSchema'\n  //   };\n  //   const str = JSON.stringify(this.normalize(value));\n  //   return database[str];\n  // }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nconst YAML = require('json2yaml');\nconst JSON5 = require('json5');\nimport { DATA } from './data-examples';\nimport { DataService } from './data.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'api-generator';\n  yamlText = '';\n  comments: Array<string> = [];\n\n  inputTextString: any = '';\n  form: FormGroup;\n  cursorLine = 0;\n  cursorPosition = 0;\n\n  searchResults = [\n    { name: 'TestSchema' }\n\n  ];\n\n  // private inputText: string | undefined;\n  constructor(private fb: FormBuilder) {\n    this.form = new FormGroup({\n      inputText: new FormControl(''),\n      // url: new FormControl(),\n      // request: new FormControl(),\n      // response: new FormControl(),\n    });\n  }\n\n  // selectSchema(name: string): void {\n  //   const text = this.form.controls.inputText.value;\n  //   const output = [text.slice(0, this.cursorPosition), name, text.slice(this.cursorPosition)].join('');\n  //\n  //   this.form.controls.inputText.setValue(output);\n  // }\n  // // getCursorLine(event: KeyboardEvent): number {\n  // //   if (event) {\n  // //     this.cursorLine = this.form.getRawValue().inputText.substr(0, event.target.selectionStart).split('\\n').length - 1;\n  // //     this.cursorPosition = event.target.selectionStart;\n  // //     return this.cursorLine;\n  // //   }\n  // // }\n  //\n  convert(): void {\n    console.log('convert');\n    let jsonObject = null;\n    try {\n      jsonObject = JSON5.parse(this.inputTextString.trim());\n\n      DataService.comments = DataService.getComments(this.inputTextString);\n    //  console.log(this.comments);\n      this.form.controls.inputText.setErrors(null);\n      DataService.lineIndex = 0;\n      console.log(jsonObject);\n      const obj = DataService.walk(jsonObject);\n\n      this.yamlText = YAML.stringify(obj);\n      this.yamlText = this.yamlText.substring(this.yamlText.indexOf('\\n') + 1);\n\n    } catch (error) {\n      this.form.controls.inputText.setErrors({incorrect: true});\n\n      console.log('Invalid JSON format', error);\n    }\n  //\n  }\n  //\n  copy(): void {\n     this.copyMessage(this.yamlText);\n  }\n  //\n  copyMessage(val: string): void{\n    const selBox = document.createElement('textarea');\n    selBox.style.position = 'fixed';\n    selBox.style.left = '0';\n    selBox.style.top = '0';\n    selBox.style.opacity = '0';\n    selBox.value = val;\n    document.body.appendChild(selBox);\n    selBox.focus();\n    selBox.select();\n    document.execCommand('copy');\n    document.body.removeChild(selBox);\n  }\n  //\n  ngOnInit(): void {\n\n  }\n  insertExample(): void {\n    this.inputTextString = DATA.testInput;\n    this.convert();\n  }\n}\n","<div class=\"container-fluid converter-container\">\n  <div class=\"row\">\n    <div class=\"col-md-7\">\n      <h3>JSON5</h3>\n      <form [formGroup]=\"form\">\n        <div class=\"form-group\">\n          <div class=\"row\">\n            <div class=\"col-md-2\">\n              <label>Input</label>\n            </div>\n            <div class=\"col-md-6\">\n<!--              <ng-container *ngFor=\"let item of searchResults\">-->\n<!--                {{ item.name }} <button class=\"btn btn-xs btn-primary ok-btn\" type=\"button\" (click)=\"selectSchema(item.name)\">OK</button>-->\n<!--              </ng-container>-->\n            </div>\n            <div class=\"col-md-4 text-right\">\n              <button class=\"btn btn-xs btn-success\" type=\"button\" (click)=\"insertExample()\">Insert example</button>\n            </div>\n          </div>\n          <input type=\"hidden\" formControlName=\"inputText\">\n          <ace-editor\n            [(text)]=\"inputTextString\"\n            [mode]=\"'json5'\"\n            [theme]=\"'eclipse'\"\n            (textChanged)=\"convert()\"\n            id=\"editor\"\n            style=\"height:800px;font-size: 18px\">\n          </ace-editor>\n<!--          <textarea class=\"form-control\"-->\n<!--                    rows=\"30\"-->\n<!--                    id=\"inputText\"-->\n<!--                    formControlName=\"inputText\"-->\n<!--                    name=\"inputText\"-->\n<!--                    (keyup)=\"getCursorLine($event);\"-->\n<!--                    (mouseup)=\"getCursorLine($event);\"-->\n<!--                    (input)=\"convert()\" >-->\n<!--          </textarea>-->\n        </div>\n<!--        <div class=\"form-group\">-->\n<!--          <label for=\"url\">Url</label>-->\n<!--          <input type=\"text\" class=\"form-control\" id=\"url\" formControlName=\"url\" name=\"url\">-->\n<!--          <small class=\"form-text text-muted\">Enclose params into </small>-->\n<!--        </div>-->\n<!--        <div class=\"form-group\">-->\n<!--          <label for=\"request\">Request</label>-->\n<!--          <textarea class=\"form-control\" id=\"request\" formControlName=\"request\" (input)=\"convert()\" name=\"request\"></textarea>-->\n<!--        </div>-->\n<!--        <div class=\"form-group\">-->\n<!--          <label for=\"response\">Response</label>-->\n<!--          <textarea class=\"form-control\" id=\"response\" name=\"response\"></textarea>-->\n<!--        </div>-->\n      </form>\n    </div>\n    <div class=\"col-md-5\">\n      <h3>YAML</h3>\n      <div class=\"row\">\n        <div class=\"col-md-6\">\n          <label>Output</label>\n        </div>\n        <div class=\"col-md-6 text-right\">\n          <button class=\"btn btn-xs btn-warning \" type=\"button\" (click)=\"copy()\">Copy to clipboard</button>\n        </div>\n      </div>\n      <div>\n        <pre><code class=\"yaml\">{{ yamlText }}</code></pre>\n      </div>\n\n      <!--                <form>-->\n      <!--                    <div class=\"form-group\">-->\n      <!--                        <label for=\"url_snippet\">Output snippet</label>-->\n      <!--                        <textarea class=\"form-control\" id=\"url_snippet\" rows=\"40\"></textarea>-->\n      <!--                    </div>-->\n      <!--                    <div class=\"form-group\">-->\n      <!--                        <label for=\"url_snippet\">Url snippet</label>-->\n      <!--                        <textarea class=\"form-control\" id=\"url_snippet\"></textarea>-->\n      <!--                    </div>-->\n      <!--                    <div class=\"form-group\">-->\n      <!--                        <label for=\"request_snippet\">Request snippet</label>-->\n      <!--                        <textarea class=\"form-control\" id=\"request_snippet\"></textarea>-->\n      <!--                    </div>-->\n      <!--                    <div class=\"form-group\">-->\n      <!--                        <label for=\"request_snippet\">Response snippet</label>-->\n      <!--                        <textarea class=\"form-control\" id=\"request_snippet\"></textarea>-->\n      <!--                    </div>-->\n      <!--                </form>-->\n    </div>\n  </div>\n\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AceEditorModule } from 'ng2-ace-editor';\n\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n    imports: [\n        BrowserModule,\n        ReactiveFormsModule,\n        AceEditorModule\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}